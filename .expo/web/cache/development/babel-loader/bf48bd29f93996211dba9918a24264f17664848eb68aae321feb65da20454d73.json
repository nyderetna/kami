{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SweetAlert from 'react-native-sweet-alert';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    successMessage = _useState6[0],\n    setSuccessMessage = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorMessage = _useState8[0],\n    setErrorMessage = _useState8[1];\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      title: ''\n    });\n  }, [navigation]);\n  React.useEffect(function () {\n    if (successMessage) {\n      SweetAlert.showAlertWithOptions({\n        title: 'Success!',\n        subTitle: successMessage,\n        confirmButtonTitle: 'OK',\n        confirmButtonColor: '#000',\n        style: 'success'\n      });\n    }\n  }, [successMessage]);\n  var handleLogin = function handleLogin() {\n    fetch('https://app.kamiidea.com/api/rfid/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Login failed');\n      }\n    }).then(function (data) {\n      setSuccessMessage(data.successMessage);\n      SweetAlert.showAlertWithOptions({\n        title: 'Success!',\n        subTitle: successMessage,\n        confirmButtonTitle: 'OK',\n        confirmButtonColor: '#000',\n        style: 'success'\n      });\n      navigation.navigate('LandingPage', {\n        userData: data\n      });\n    }).catch(function (error) {\n      SweetAlert.showAlertWithOptions({\n        title: 'Failed!',\n        subTitle: error.errorMessage || 'Login failed',\n        confirmButtonTitle: 'OK',\n        confirmButtonColor: '#000',\n        style: 'error'\n      });\n      console.error('Login failed:', error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Image, {\n        source: require(\"./assets/appstore.png\"),\n        style: styles.appstoreImage\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        placeholder: \"Enter email\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        placeholder: \"Enter password\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  inputContainer: {\n    width: '50%'\n  },\n  label: {\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    height: 40\n  },\n  loginButton: {\n    backgroundColor: '#100c08',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  appstoreImage: {\n    width: 200,\n    height: 100,\n    resizeMode: 'contain',\n    marginTop: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","StyleSheet","Image","Text","SweetAlert","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","successMessage","setSuccessMessage","_useState7","_useState8","errorMessage","setErrorMessage","useLayoutEffect","setOptions","title","useEffect","showAlertWithOptions","subTitle","confirmButtonTitle","confirmButtonColor","style","handleLogin","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","navigate","userData","catch","error","console","styles","container","children","iconContainer","source","require","appstoreImage","inputContainer","label","input","value","onChangeText","text","placeholder","secureTextEntry","loginButton","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","width","borderWidth","borderColor","borderRadius","paddingHorizontal","height","padding","color","fontWeight","resizeMode","marginTop"],"sources":["C:/Users/yutam/OneDrive/Documents/WMS/kami/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, StyleSheet, Image, Text } from 'react-native';\r\n// import { Alert } from 'react-native';\r\nimport SweetAlert from 'react-native-sweet-alert';\r\n\r\n\r\n// admin@kami.com\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: '', // Set the title of the screen\r\n    });\r\n  }, [navigation]);\r\n\r\n  React.useEffect(() => {\r\n    if (successMessage) {\r\n      SweetAlert.showAlertWithOptions({\r\n        title: 'Success!',\r\n        subTitle: successMessage,\r\n        confirmButtonTitle: 'OK',\r\n        confirmButtonColor: '#000',\r\n        style: 'success',\r\n      });\r\n    }\r\n  }, [successMessage]);\r\n  \r\n\r\n  const handleLogin = () => {\r\n    fetch('https://app.kamiidea.com/api/rfid/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Login failed');\r\n        }\r\n      })\r\n      .then(data => {\r\n        setSuccessMessage(data.successMessage);\r\n        SweetAlert.showAlertWithOptions({\r\n          title: 'Success!',\r\n          subTitle: successMessage,\r\n          confirmButtonTitle: 'OK',\r\n          confirmButtonColor: '#000',\r\n          style: 'success',\r\n        });\r\n        // Redirect to another page on successful login\r\n        navigation.navigate('LandingPage', { userData: data });\r\n      })\r\n      .catch(error => {\r\n        SweetAlert.showAlertWithOptions({\r\n          title: 'Failed!',\r\n          subTitle: error.errorMessage || 'Login failed',\r\n          confirmButtonTitle: 'OK',\r\n          confirmButtonColor: '#000',\r\n          style: 'error',\r\n        });\r\n        console.error('Login failed:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.iconContainer}>\r\n        <Image source={require('./assets/appstore.png')} style={styles.appstoreImage} />\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <Text style={styles.label}>Email</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          placeholder=\"Enter email\"\r\n        />\r\n        <Text style={styles.label}>Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          placeholder=\"Enter password\"\r\n          secureTextEntry={true}\r\n        />\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}; \r\n\r\n// Your styles here...\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#fff',\r\n    },\r\n    iconContainer: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom: 20,\r\n    },\r\n    inputContainer: {\r\n      width: '50%',\r\n    },\r\n    label: {\r\n      marginBottom: 5,\r\n    },\r\n    input: {\r\n      borderWidth: 1,\r\n      borderColor: '#ccc',\r\n      borderRadius: 5,\r\n      paddingHorizontal: 10,\r\n      marginBottom: 15,\r\n      height: 40,\r\n    },\r\n    loginButton: {\r\n      backgroundColor: '#100c08',\r\n      padding: 10,\r\n      borderRadius: 5,\r\n      alignItems: 'center',\r\n    },\r\n    buttonText: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    appstoreImage: {\r\n        width: 200, // Adjust the width as needed\r\n        height: 100, // Adjust the height as needed\r\n        resizeMode: 'contain', // Adjust the resizeMode as needed\r\n        marginTop: 20, // Adjust the margin as needed\r\n      },\r\n  });\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}