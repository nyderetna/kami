{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PosMenu = function PosMenu(token) {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"POS Menu\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    padding: 10,\n    backgroundColor: '#3498db',\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  disabled: {\n    opacity: 0.5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  deviceList: {\n    width: '100%'\n  },\n  deviceItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderColor: '#ccc'\n  }\n});\nexport default PosMenu;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","jsx","_jsx","PosMenu","token","style","styles","container","children","title","create","flex","padding","alignItems","justifyContent","fontSize","fontWeight","marginBottom","button","backgroundColor","borderRadius","disabled","opacity","buttonText","color","textAlign","deviceList","width","deviceItem","borderBottomWidth","borderColor"],"sources":["C:/Users/yutam/OneDrive/Documents/WMS/kami/PosMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n// import BleManagerInstance from '../services/BleManagerInstance';\r\n\r\nconst PosMenu = (token) => {\r\n//   const [isBluetoothOn, setIsBluetoothOn] = useState(false);\r\n//   const [scanning, setScanning] = useState(false);\r\n//   const [peripherals, setPeripherals] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     checkBluetoothStatus();\r\n//     return () => {\r\n//       BleManagerInstance.destroy(); // Use BleManagerInstance instead of new BleManager()\r\n//     };\r\n//   }, []);\r\n\r\n//   const checkBluetoothStatus = async () => {\r\n//     const state = await BleManagerInstance.state(); // Use BleManagerInstance instead of new BleManager()\r\n//     setIsBluetoothOn(state === 'PoweredOn');\r\n//   };\r\n\r\n//   const startScan = async () => {\r\n//     if (!isBluetoothOn || scanning) return;\r\n\r\n//     setScanning(true);\r\n//     BleManagerInstance.startDeviceScan(null, null, (error, device) => {\r\n//       if (error) {\r\n//         console.error('Error scanning:', error);\r\n//         return;\r\n//       }\r\n\r\n//       if (device) {\r\n//         setPeripherals((peripherals) => [...peripherals, device]);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   const connectToDevice = async (deviceId) => {\r\n//     if (!isBluetoothOn) return;\r\n\r\n//     BleManagerInstance.stopDeviceScan(); // Use BleManagerInstance instead of new BleManager()\r\n//     setScanning(false);\r\n\r\n//     try {\r\n//       const device = await BleManagerInstance.connectToDevice(deviceId); // Use BleManagerInstance instead of new BleManager()\r\n//       // Handle device connection\r\n//     } catch (error) {\r\n//       console.error('Error connecting to device:', error);\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>POS Menu</Text>\r\n      {/* <TouchableOpacity\r\n        style={[styles.button, !isBluetoothOn && styles.disabled]}\r\n        onPress={startScan}\r\n        disabled={!isBluetoothOn}>\r\n        <Text style={styles.buttonText}>\r\n          {scanning ? 'Scanning...' : 'Scan for Devices'}\r\n        </Text>\r\n      </TouchableOpacity> */}\r\n      {/* <View style={styles.deviceList}>\r\n        {peripherals.map((device) => (\r\n          <TouchableOpacity\r\n            key={device.id}\r\n            style={styles.deviceItem}\r\n            onPress={() => connectToDevice(device.id)}>\r\n            <Text>{device.name || 'Unnamed Device'}</Text>\r\n            <Text>{device.id}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    padding: 10,\r\n    backgroundColor: '#3498db',\r\n    borderRadius: 5,\r\n    marginBottom: 20,\r\n  },\r\n  disabled: {\r\n    opacity: 0.5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  deviceList: {\r\n    width: '100%',\r\n  },\r\n  deviceItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n});\r\n\r\nexport default PosMenu;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAInD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;EA+CzB,OACEF,IAAA,CAACL,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BN,IAAA,CAACJ,IAAI;MAACO,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAQ,CAAM;EAAC,CAoBtC,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGN,UAAU,CAACU,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDL,KAAK,EAAE;IACLM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDC,MAAM,EAAE;IACNN,OAAO,EAAE,EAAE;IACXO,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,CAAC;IACfH,YAAY,EAAE;EAChB,CAAC;EACDI,QAAQ,EAAE;IACRC,OAAO,EAAE;EACX,CAAC;EACDC,UAAU,EAAE;IACVC,KAAK,EAAE,OAAO;IACdR,UAAU,EAAE,MAAM;IAClBS,SAAS,EAAE;EACb,CAAC;EACDC,UAAU,EAAE;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,UAAU,EAAE;IACVhB,OAAO,EAAE,EAAE;IACXiB,iBAAiB,EAAE,CAAC;IACpBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAe3B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}