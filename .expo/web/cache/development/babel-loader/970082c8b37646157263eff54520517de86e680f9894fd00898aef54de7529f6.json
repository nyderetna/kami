{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BleManagerInstance from \"../services/BleManagerInstance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PosMenu = function PosMenu(token) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isBluetoothOn = _useState2[0],\n    setIsBluetoothOn = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanning = _useState4[0],\n    setScanning = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    peripherals = _useState6[0],\n    setPeripherals = _useState6[1];\n  useEffect(function () {\n    checkBluetoothStatus();\n    return function () {\n      BleManagerInstance.destroy();\n    };\n  }, []);\n  var checkBluetoothStatus = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var state = yield BleManagerInstance.state();\n      setIsBluetoothOn(state === 'PoweredOn');\n    });\n    return function checkBluetoothStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var startScan = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!isBluetoothOn || scanning) return;\n      setScanning(true);\n      BleManagerInstance.startDeviceScan(null, null, function (error, device) {\n        if (error) {\n          console.error('Error scanning:', error);\n          return;\n        }\n        if (device) {\n          setPeripherals(function (peripherals) {\n            return [].concat(_toConsumableArray(peripherals), [device]);\n          });\n        }\n      });\n    });\n    return function startScan() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var connectToDevice = function () {\n    var _ref3 = _asyncToGenerator(function* (deviceId) {\n      if (!isBluetoothOn) return;\n      BleManagerInstance.stopDeviceScan();\n      setScanning(false);\n      try {\n        var device = yield BleManagerInstance.connectToDevice(deviceId);\n      } catch (error) {\n        console.error('Error connecting to device:', error);\n      }\n    });\n    return function connectToDevice(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"POS Menu\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, !isBluetoothOn && styles.disabled],\n      onPress: startScan,\n      disabled: !isBluetoothOn,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: scanning ? 'Scanning...' : 'Scan for Devices'\n      })\n    }), _jsx(View, {\n      style: styles.deviceList,\n      children: peripherals.map(function (device) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.deviceItem,\n          onPress: function onPress() {\n            return connectToDevice(device.id);\n          },\n          children: [_jsx(Text, {\n            children: device.name || 'Unnamed Device'\n          }), _jsx(Text, {\n            children: device.id\n          })]\n        }, device.id);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    padding: 10,\n    backgroundColor: '#3498db',\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  disabled: {\n    opacity: 0.5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  deviceList: {\n    width: '100%'\n  },\n  deviceItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderColor: '#ccc'\n  }\n});\nexport default PosMenu;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","BleManagerInstance","jsx","_jsx","jsxs","_jsxs","PosMenu","token","_useState","_useState2","_slicedToArray","isBluetoothOn","setIsBluetoothOn","_useState3","_useState4","scanning","setScanning","_useState5","_useState6","peripherals","setPeripherals","checkBluetoothStatus","destroy","_ref","_asyncToGenerator","state","apply","arguments","startScan","_ref2","startDeviceScan","error","device","console","concat","_toConsumableArray","connectToDevice","_ref3","deviceId","stopDeviceScan","_x","style","styles","container","children","title","button","disabled","onPress","buttonText","deviceList","map","deviceItem","id","name","create","flex","padding","alignItems","justifyContent","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius","opacity","color","textAlign","width","borderBottomWidth","borderColor"],"sources":["C:/Users/yutam/OneDrive/Documents/WMS/kami/PosMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport BleManagerInstance from '../services/BleManagerInstance';\r\n\r\nconst PosMenu = (token) => {\r\n  const [isBluetoothOn, setIsBluetoothOn] = useState(false);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [peripherals, setPeripherals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    checkBluetoothStatus();\r\n    return () => {\r\n      BleManagerInstance.destroy(); // Use BleManagerInstance instead of new BleManager()\r\n    };\r\n  }, []);\r\n\r\n  const checkBluetoothStatus = async () => {\r\n    const state = await BleManagerInstance.state(); // Use BleManagerInstance instead of new BleManager()\r\n    setIsBluetoothOn(state === 'PoweredOn');\r\n  };\r\n\r\n  const startScan = async () => {\r\n    if (!isBluetoothOn || scanning) return;\r\n\r\n    setScanning(true);\r\n    BleManagerInstance.startDeviceScan(null, null, (error, device) => {\r\n      if (error) {\r\n        console.error('Error scanning:', error);\r\n        return;\r\n      }\r\n\r\n      if (device) {\r\n        setPeripherals((peripherals) => [...peripherals, device]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const connectToDevice = async (deviceId) => {\r\n    if (!isBluetoothOn) return;\r\n\r\n    BleManagerInstance.stopDeviceScan(); // Use BleManagerInstance instead of new BleManager()\r\n    setScanning(false);\r\n\r\n    try {\r\n      const device = await BleManagerInstance.connectToDevice(deviceId); // Use BleManagerInstance instead of new BleManager()\r\n      // Handle device connection\r\n    } catch (error) {\r\n      console.error('Error connecting to device:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>POS Menu</Text>\r\n      <TouchableOpacity\r\n        style={[styles.button, !isBluetoothOn && styles.disabled]}\r\n        onPress={startScan}\r\n        disabled={!isBluetoothOn}>\r\n        <Text style={styles.buttonText}>\r\n          {scanning ? 'Scanning...' : 'Scan for Devices'}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.deviceList}>\r\n        {peripherals.map((device) => (\r\n          <TouchableOpacity\r\n            key={device.id}\r\n            style={styles.deviceItem}\r\n            onPress={() => connectToDevice(device.id)}>\r\n            <Text>{device.name || 'Unnamed Device'}</Text>\r\n            <Text>{device.id}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    padding: 10,\r\n    backgroundColor: '#3498db',\r\n    borderRadius: 5,\r\n    marginBottom: 20,\r\n  },\r\n  disabled: {\r\n    opacity: 0.5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  deviceList: {\r\n    width: '100%',\r\n  },\r\n  deviceItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n});\r\n\r\nexport default PosMenu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}