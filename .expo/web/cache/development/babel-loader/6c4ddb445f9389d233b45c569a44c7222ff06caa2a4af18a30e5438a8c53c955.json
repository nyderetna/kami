{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TransferPost = function TransferPost(token) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var handleTransfer = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var _token = yield SecureStore.getItemAsync('apiKey');\n        var url = 'https://app.kamiidea.com/api/rfid/transfers/1';\n        var headers = {\n          Authorization: `Bearer ${_token}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        };\n        var requestBody = {\n          items: items\n        };\n        var response = yield fetch(url, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify(requestBody)\n        });\n        if (response.ok) {\n          var responseData = yield response.json();\n          console.log('Transfer initiated successfully:', responseData);\n        } else {\n          console.error('Failed to initiate transfer:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error initiating transfer:', error);\n      }\n    });\n    return function handleTransfer() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      value: items,\n      onChangeText: function onChangeText(text) {\n        return setItems(text);\n      },\n      placeholder: \"Items\"\n    }), _jsx(TouchableOpacity, {\n      onPress: handleTransfer,\n      style: styles.submitButton,\n      children: _jsx(Text, {\n        style: styles.submitButtonText,\n        children: \"Initiate Transfer\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 15,\n    height: 40,\n    width: '100%'\n  },\n  submitButton: {\n    backgroundColor: '#100c08',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '50%'\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default TransferPost;","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","StyleSheet","Text","SecureStore","jsx","_jsx","jsxs","_jsxs","TransferPost","token","_useState","_useState2","_slicedToArray","items","setItems","handleTransfer","_ref","_asyncToGenerator","getItemAsync","url","headers","Authorization","Accept","requestBody","response","fetch","method","body","JSON","stringify","ok","responseData","json","console","log","error","statusText","apply","arguments","style","styles","container","children","input","value","onChangeText","text","placeholder","onPress","submitButton","submitButtonText","create","flex","justifyContent","alignItems","paddingHorizontal","borderWidth","borderColor","borderRadius","marginBottom","height","width","backgroundColor","padding","color","fontWeight"],"sources":["C:/Users/yutam/OneDrive/Documents/WMS/kami/TransferPost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nconst TransferPost = ( token ) => {\r\n  const [items, setItems] = useState('');\r\n\r\n  const handleTransfer = async () => {\r\n    try {\r\n      const token = await SecureStore.getItemAsync('apiKey');\r\n      const url = 'https://app.kamiidea.com/api/rfid/transfers/1'; // Update with the correct transfer ID\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      };\r\n\r\n      const requestBody = {\r\n        items: items,\r\n      };\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Transfer initiated successfully:', responseData);\r\n        // Handle success, update UI, etc.\r\n      } else {\r\n        console.error('Failed to initiate transfer:', response.statusText);\r\n        // Handle failure, display error message, etc.\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initiating transfer:', error);\r\n      // Handle error, display error message, etc.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={items}\r\n        onChangeText={(text) => setItems(text)}\r\n        placeholder=\"Items\"\r\n      />\r\n      <TouchableOpacity onPress={handleTransfer} style={styles.submitButton}>\r\n        <Text style={styles.submitButtonText}>Initiate Transfer</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 15,\r\n    height: 40,\r\n    width: '100%',\r\n  },\r\n  submitButton: {\r\n    backgroundColor: '#100c08',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    width: '50%',\r\n  },\r\n  submitButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default TransferPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}